const select = a => document.querySelector(a),
      selectAll = a => document.querySelectorAll(a),
      input = select('#textInput'),
      output = select('#textOutput'),
      inputFull = select('#textFull'),
      _timer = select('#timer'),
      _wpm = select('#wpm'),
      _cpm = select('#cpm'),
      _errors = select('#errors'),
      _accuracy = select('#accuracy'),
      _totalWords = select('#totalWords'),
      _writtenWords = select('#writtenWords'),
      modal = select('#ModalCenter'),
      modalBody = select('.modal-body'),
      modalClose = selectAll('.modal-close'),
      modalReload = select('#modalReload'),
      btnPlay = select('#btnPlay'),
      btnRefresh = select('#btnRefresh'),
      soundOn = select('.icon-sound-on'),
      soundOff = select('.icon-sound-off'),
      keyClick = select('#keyClick'),
      keyBeep = select('#keyBeep');

let sound = true;

soundOn.addEventListener('click', a => {
    a.currentTarget.classList.add('d-none');
    soundOff.classList.remove('d-none');
    sound = false;
});

soundOff.addEventListener('click', a => {
    a.currentTarget.classList.add('d-none');
    soundOn.classList.remove('d-none');
    sound = true;
});

const allQuotes = [];
fetch('js/quotes.json')
    .then(a => a.json())
    .then(a => allQuotes.push(...a))
    .catch(a => console.error('Error:', a));

const random = a => a[Math.floor(Math.random() * a.length)];

class speedTyping {
    constructor() {
        this.index = 0;
        this.words = 0;
        this.errorIndex = 0;
        this.correctIndex = 0;
        this.accuracyIndex = 0;
        this.cpm = 0;
        this.wpm = 0;
        this.interval = null;
        this.duration = 60;
        this.typing = false;
        this.quote = [];
        this.author = [];
    }

    timer() {
        if (typeof this.interval !== 'number') {
            const a = Date.now(),
                  b = a + 1000 * this.duration;
            _timer.innerHTML = `${this.duration}<span class="small">s</span>`;
            this.interval = setInterval(() => {
                const c = Math.round((b - Date.now()) / 1000);
                _timer.innerHTML = `${c}<span class="small">s</span>`;
                if (c === 0) {
                    this.stop();
                    this.finish();
                }
            }, 1000);
        }
    }

    start() {
        const a = allQuotes.filter(f => f.level === 'Easy'),
              b = a.map(f => f.quote),
              c = a.map(f => f.author);
        
        this.author = random(c);
        this.quote = random(b);
        
        const d = this.quote.split(' ').filter(f => f).length;
        _totalWords.textContent = d;
        
        this.timer();
        btnPlay.classList.add('active');
        input.setAttribute('tabindex', '0');
        input.removeAttribute('disabled');
        input.focus();
        input.classList.add('active');
        
        if (!this.typing) {
            this.typing = true;
            input.textContent = this.quote;

            input.addEventListener('keypress', f => {
                f.preventDefault();
                f = f || window.event;

                const g = f.which || f.keyCode,
                      h = String.fromCharCode(g);

                if (h === this.quote.charAt(this.index)) {
                    if (h === ' ' && g === 32) {
                        this.words++;
                        _writtenWords.textContent = this.words;
                    }
                    this.index++;
                    const j = this.quote.substring(this.index, this.index + this.quote.length);
                    input.textContent = j;
                    output.innerHTML += h;
                    this.correctIndex++;

                    if (this.index === this.quote.length) {
                        this.stop();
                        this.finish();
                        return;
                    }

                    if (sound) {
                        keyClick.currentTime = 0;
                        keyClick.play();
                    }
                } else {
                    output.innerHTML += `<span class="text-danger">${h}</span>`;
                    this.errorIndex++;
                    _errors.textContent = this.errorIndex;
                    this.correctIndex--;

                    if (sound) {
                        keyBeep.currentTime = 0;
                        keyBeep.play();
                    }
                }

                this.cpm = this.correctIndex > 5 ? Math.floor(60 * (this.correctIndex / this.duration)) : 0;
                _cpm.textContent = this.cpm;
                this.wpm = Math.round(this.cpm / 5);
                _wpm.textContent = this.wpm;
                this.accuracyIndex = this.correctIndex > 5 ? Math.round(100 * this.correctIndex / this.index) : 0;

                if (this.accuracyIndex > 0 && Number.isInteger(this.accuracyIndex)) {
                    _accuracy.innerHTML = `${this.accuracyIndex}<span class="small">%</span>`;
                }
            });
        }
    }

    stop() {
        clearInterval(this.interval);
        this.interval = null;
        this.typing = false;
        _timer.textContent = '0';
        btnPlay.remove();
        input.remove();
        btnRefresh.classList.add('active');
        inputFull.classList.remove('d-none');
        inputFull.innerHTML = `&#8220;${this.quote}&#8221; <span class="d-block small text-muted text-right pr-3">&ndash; ${this.author}</span>`;
    }

    finish() {
        modal.style.display = 'block';
        const a = this.wpm;
        let b = '';
        const c = `Your typing speed is <strong>${a}</strong> WPM which equals <strong>${this.cpm}</strong> CPM. You've made a <strong>${this.errorIndex}</strong> mistakes with <strong>${this.accuracyIndex}%</strong> total accuracy.`;

        if (a > 5 && a < 20) {
            b = `<div class="modal-icon my-3 d-flex justify-content-center"><img src="img/sleeping.svg" class="media-object"></div><div class="media-body p-2"><h4 class="media-heading">So Slow!</h4><p class="lead pt-2">${c} You should do more practice! ควรฝึกบ่อยๆให้ชิน!</p></div>`;
        } else if (a > 20 && a < 40) {
            b = `<div class="modal-icon my-3 d-flex justify-content-center"><img src="img/thinking.svg" class="media-object"></div><div class="media-body p-2"><h4 class="media-heading">About Average!</h4><p class="lead pt-2">${c} You can do better! คุณทำได้มากกว่านี้นะ!</p></div>`;
        } else if (a > 40 && a < 60) {
            b = `<div class="modal-icon my-3 d-flex justify-content-center"><img src="img/surprised.svg" class="media-object"></div><div class="media-body p-2"><h4 class="media-heading">Great Job!</h4><p class="lead pt-2">${c} You're doing great! ทำได้ดีนะ แต่ว่า...</p></div>`;
        } else if (a > 60) {
            b = `<div class="modal-icon my-3 d-flex justify-content-center"><img src="img/shocked.svg" class="media-object"></div><div class="media-body p-2"><h4 class="media-heading">Insane!</h4><p class="lead pt-2">${c} You're are Awesome! สุดยอดเลยนะ!!</p></div>`;
        } else {
            b = `<div class="modal-icon my-3 d-flex justify-content-center"><img src="img/smart.svg" class="media-object"></div><div class="media-body p-2"><h4 class="media-heading">Hmmm!</h4><p class="lead pt-2">Please stop playing around and start typing! เฮ้! อย่ามัวแต่เล่นอย่างอื่น</p></div>`;
        }

        modalBody.innerHTML = b;
        modalClose.forEach(d => d.addEventListener('click', () => modal.style.display = 'none'));
        window.addEventListener('click', d => d.target === modal ? modal.style.display = 'none' : '');
        modalReload.addEventListener('click', () => location.reload());
        localStorage.setItem('WPM', a);
    }
}

const typingTest = new speedTyping();

btnPlay.addEventListener('click', () => typingTest.start());
btnRefresh.addEventListener('click', () => location.reload());

const savedWPM = localStorage.getItem('WPM') || 0;
select('#result').innerHTML = `<li>${savedWPM}</li>`;
